version: '3'

networks:
  app-network:
    driver: ${NETWORKS_DRIVER}

volumes:
  dbdata:
    driver: ${VOLUMES_DRIVER}

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./../:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ./../:/var/www
      - ./php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - TZ=${TIMEZONE}
    networks:
      - app-network

  mysql:
    image: mysql:8.0.29
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./.data/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=${TIMEZONE}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
    networks:
      - app-network

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - app-network

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - ${SWAGGER_UI_PORT}:8080
    volumes:
      - ${SWAGGER_SOURCE_PATH}:/usr/share/nginx/html/swagger
    environment:
      API_URL: swagger/api.yaml
      BASE_URL: ${SWAGGER_BASE_URL}
      
  supervisor:
    image: supervisor8
    build:
      context: ./
      dockerfile: ./Dockerfile.supervisor
    volumes:
      - ./../:/var/www
      - ./supervisord/supervisord.conf:/etc/supervisor/supervisord.conf
    environment:
      - TZ=${TIMEZONE}
    networks:
      - app-network
    depends_on:
      - php
      - redis

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./redis/sysctl.conf:/usr/local/etc/redis/redis.conf
      - ./data:/.data_redis
    environment:
      - TZ=${TIMEZONE}
    networks:
      - app-network
